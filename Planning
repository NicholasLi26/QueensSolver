2x2 array for each of the rows
array from each of the colours listing indicies - used for getting heights
heights 
array for col finished - do not search in said 
array for row finished
var for each of the currently selected queens in each Selection
array of indicies that are not possible

scan horizontal then vertical
if found break scan, move to funct modify and carry out modification - save scan spot.

find colours with Least
order
find overlaps
checks
x out on colours that have extras
do vertical and horizontal
funct index in arr. bool
funct. check done bool
funct. check rows 
    if row = one color
    if row = one square and x
funct check col
    if col = one color
    if col = one square and x
funct check heights
    if exists same num of colours at either starting low y or high y where num height <= num colours where the difference between any 2 is <\1
    x all other colours in all rows

mod
funct clear col
funct clear rows
funct clear surround // combine

checks: if height of num colours occupoy num rows

known on start
Numi of colourssize of grid
num of tiles for each colour
    case for one

state of the check, rows, cols, or groups
after check for ones in colour grouping though colour object arracy


IF WITHIN RANGE OF ROWS OR columns there exists equal number of colours whose range of width or height firts within the scanned rows or columns
itterate through list, starting at one column working way in 
add all colours found in coloumn to array of widths.
if the num of colours that are constrained within the scope of the scanned rows or columns is equal to the width or height,
remove all colours not within scope
have for loop
is colour within scope check width, if >the current width, expand, add additional colours. recheck widths, see how many are in scope
if num in scope = width, remove all colours not in scope.  
add colors to scope array
remove all colours not within the rows

scan left ro right including all ranges. 
similar to above, but if num of colours equals the width, remove rest of colour. can possibly implement with above if 
num of colours and contraints = width.

link all coords to get the structure
check surrounding colours to see if they link with all other colours, and for all colours not foudn within connecting row, are in same row or in col
